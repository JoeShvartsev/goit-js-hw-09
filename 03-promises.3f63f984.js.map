{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IAIbL,EAAKa,iBAAiB,UAAUC,MAAOC,IACrCA,EAAEC,iBAEF,MAAMX,EAAQY,SAASjB,EAAKkB,SAASb,MAAMc,OACrCC,EAAOH,SAASjB,EAAKkB,SAASE,KAAKD,OACnCE,EAASJ,SAASjB,EAAKkB,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMC,EAAqB,IAAND,EAAUjB,EAAQA,EAAQiB,EAAIF,EACnD,IACE,MAAMI,QAAerB,EAAcmB,EAAI,EAAGC,GAC1CE,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBH,EAAIpB,eAAoBoB,EAAEnB,U,CACvE,MAAOuB,GACPH,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBD,EAAExB,eAAmBwB,EAAEvB,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    const promiseDelay = i === 0 ? delay : delay + i * step;\n    try {\n      const result = await createPromise(i + 1, promiseDelay);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    } catch (error) {\n      Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n    }\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","async","e","preventDefault","parseInt","elements","value","step","amount","i","promiseDelay","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.3f63f984.js.map"}